# version: '3.7'
services:

  web:
    build: ./python/
    command: python ./${PROJECT}/manage.py runserver 0.0.0.0:8000
    volumes:
      - ../:/home/sites/${PROJECT}/
    env_file:
      - ./.env 
    ports:
      - 8000:8000

    depends_on:
      - pgdb

      
  # celery:
  #   container_name: celery
  #   build: ./python/
  #   command: >
  #     sh -c "cd lemurproj/ && celery -A project worker -l info"
  #   volumes:
  #     - ../:/home/sites/lemurproj/
  #   ports:
  #     - "5566:5566"
  #   depends_on:
  #     - redis

  # celery-beat:
  #   container_name: celery-beat
  #   build: ./python/
  #   command: >
  #     sh -c "cd lemurproj/ && celery -A project beat -l info"
  #   volumes:
  #     - ../:/home/sites/lemurproj/
  #   depends_on:
  #     - redis
  #     - celery

  # redis:
  #   container_name: redis
  #   image: redis
  #   ports:
  #       - "6379:6379"    


  pgdb:
    # Использование готового образа postgres
    image: postgres
    # Задание переменных окружения для контейнера с postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
     # Задание имени контейнера для сервиса pgdb
    container_name: pgdb
     # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - ../:/home/sites/${PROJECT}/pgdbdata:/var/lib/postgresql/data/
      
      # - pgdbdata:/var/lib/postgresql/data/


  
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 89:8080
    
volumes:
  pgdbdata: null    